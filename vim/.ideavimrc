let mapleader = " "

set relativenumber number
set ignorecase
set smartcase
set scrolloff=3 " 3 lines above/below cursor when scrolling
set ideajoin

" Integrate with system clipboard
set clipboard=unnamedplus,unnamed

" jk leaves insert mode
inoremap jk <ESC>

" J & K moves text selected up and down in visual mode
vnoremap J :m '>+1<CR>gv=gv
vnoremap K :m '<-2<CR>gv=gv

" Remap splits navigation to just CTRL + hjkl
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" Enables distraction free mode
nmap <c-z> :action ToggleDistractionFreeMode<cr>

" Code navigation
nnoremap <leader>sp :sp<space>
nnoremap <leader>vs :vs<space>
nmap <C-f> :action SelectInProjectView<cr>
nmap <C-w>o :action CloseAllEditorsButActive<cr>
nmap <leader>ps :action FindInPath<cr>
nmap <C-b> :action ActivateProjectToolWindow<cr>
nmap <leader>pc :action GotoClass<cr>
nmap <leader>gd :action GotoDeclaration<cr>
nmap <leader>gi :action GotoImplementation<cr>
nmap <leader>gm :action FileStructurePopup<cr>
nmap <leader>gh :action CallHierarchy<cr>
nmap <leader>pf :action GotoFile<cr>
nmap <leader>gr :action ShowUsages<cr>
nmap <leader>gf :action RecentFiles<cr>
nmap <leader>gl :action RecentLocations<cr>
nmap <leader>b :action Back<cr>
nmap <leader>f :action Forward<cr>
nmap <C-n> :action Kotlin.NewFile<cr>
nmap ]d :action GotoNextError<cr>
nmap [d :action GotoPreviousError<cr>
nmap [[ :action MethodUp<cr>
nmap ]] :action MethodDown<cr>

" Refactoring
nmap <leader>rn :action RenameElement<cr>
nmap <leader>rp :action Refactorings.QuickListPopupAction<cr>
nmap <leader>rm :action Move<cr>
nmap == :action ReformatCode<cr>

" Running and debugging
nnoremap ,r :action ContextRun<CR>
nnoremap ,c :action RunClass<CR>
nnoremap ,f :action ChooseRunConfiguration<CR>
nnoremap ,t :action ActivateRunToolWindow<CR>
nnoremap ,u :action Rerun<CR>
